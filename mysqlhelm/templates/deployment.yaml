apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  namespace: {{ .Values.namespace }}
spec:
  #replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appname }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
    spec:
      containers:
      #- image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        name: {{ .Values.appname }}
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.rootpassword }}
        command: ["/bin/bash"]
        args: ["-c", "service mysql restart && sleep 5 && /var/lib/mysql/sifredegis.sh $MYSQL_ROOT_PASSWORD && if [ -f /var/lib/mysql/test ]; then echo 'dosya zaten var'; else mysql -u root -e 'create database harunakts; use harunakts; CREATE TABLE harun (id INT AUTO_INCREMENT PRIMARY KEY,sayi INT NOT NULL); INSERT INTO harun (sayi) VALUES (5);'; touch /var/lib/mysql/test; fi && tail -1000f /var/log/mysql/error.log"]
        #imagePullPolicy: IfNotPresent
        #envFrom:
        #- configMapRef:
        #    name: {{ .Values.appname }}-config
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.appname }}-pv-claim
